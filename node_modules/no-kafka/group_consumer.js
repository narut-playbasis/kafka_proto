'use strict';

// var Promise = require('bluebird');
// var _ = require('lodash');

var Kafka = require('./lib/index');

var consumer = new Kafka.GroupConsumer({
    heartbeatTimeout: 100,
    connectionString: '127.0.0.1:9092,127.0.0.1:9093',
    timeout: 1000
});

var strategies = [{
    strategy: 'TestStrategy1',
    subscriptions: ['kafka-test-topic'],
    metadata: {
        id: process.argv[2] || 'client1',
        weight: 50,
    },
    // fn: Kafka.RangeAssignment
}, {
    strategy: 'TestStrategy2',
    subscriptions: ['kafka-test-topic'],
    metadata: '' + process.pid,
}];

consumer.on('data', function (messageSet, topic, partition) {
    messageSet.forEach(function (m) {
        var message = JSON.parse(m.message.value);
        console.log(require('util').inspect(message, true, 10, true));
        // console.log(topic, partition, m.offset, message, message.values[0]);
        consumer.commitOffset({
            topic: topic,
            partition: partition,
            offset: m.offset,
            metadata: 'optional',
        });
    });
});

consumer.init(strategies[0])
    /*.delay(3000)
    .then(function () {
        return consumer.end();
    })
    .then(function () {
        console.log('ended');
    })*/
    .catch(function (err) {
        Kafka.error(err);
        process.exit(255);
    });
